{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Sidebar.js","components/DashboardChart.js","components/Dashboard.js","components/Login.js","components/Debt.js","components/Income.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateAccount.js","components/Setting.js","components/Expense.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","console","log","code","Card","CardContent","className","Alert","severity","Form","onSubmit","style","display","justifyContent","alignItems","TextField","required","id","label","defaultValue","inputRef","type","Button","color","size","variant","disabled","component","Link","to","drawerWidth","useStyles","makeStyles","theme","drawerPaper","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","padding","mixins","content","flexGrow","titleItemRight","float","withRouter","props","classes","open","setOpen","toggler","itemListMain","text","icon","onClick","itemListSecondary","aValue","localStorage","getItem","setItem","window","location","reload","root","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","edge","Typography","noWrap","Drawer","paper","direction","List","map","item","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","DashboardChartType","data","labels","datasets","backgroundColor","borderColor","borderWidth","height","options","maintainAspectRatio","scales","yAxis","ticks","beginAtZero","gridContainer","paddingLeft","paddingRight","Dashboard","Grid","container","xs","sm","md","DashboardChart","align","Login","formatter","Intl","NumberFormat","currency","Debt","amountInputRef","interestRateRef","monthlyPaymentRef","debtAmount","setDebtAmount","debtInterest","setDebtInterest","debtPayment","setDebtPayment","UserDebtFinanceData","DebtAmount","DebtInterestRate","DebtMonthlyPayment","collection","doc","uid","set","merge","getUserFinanceData","docRef","get","docData","exists","fetchTransaction","sx","FormControl","Tooltip","title","format","columns","maxWidth","toLocaleString","minWidth","Income","page","setPage","rowsPerPage","setRowsPerPage","Date","selectedDate","setSelectedDate","incomeType","setIncomeType","getIncomeData","where","snapshot","docs","generateNewID","highestID","empty","forEach","dataResult","ID","Number","newID","date","moment","transactionData","Amount","Type","UserID","setData","preSort","sorted","sort","first","second","Select","labelId","onChange","event","target","autoWidth","inputProps","MenuItem","utils","DateFnsUtils","margin","KeyboardButtonProps","TableContainer","Paper","Table","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","tabIndex","TablePagination","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","PrivateRoute","Component","rest","render","ForgotPassword","messsage","setMessage","UpdateAccount","CardHeader","avatar","Avatar","titleTypographyProps","promises","Promise","all","then","catch","finally","formControl","selectEmpty","marginTop","Setting","savedNotifyVal","openExport","setOpenExport","openImport","setOpenImport","handleCloseImport","importTextRef","handleCloseExport","savedCurrencyVal","exportJson","JSON","stringify","parse","notify","state","setState","setCurrency","currentCurrency","FormHelperText","FormControlLabel","control","Switch","checked","name","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","fullWidth","DialogActions","Object","keys","k","Box","textAlign","palette","secondary","Expense","noteInputRef","transType","setTransType","Note","getTransactionData","minHeight","placeholder","multiline","rows","rowsMax","App","darkMode","setDarkMode","localTheme","createMuiTheme","ThemeProvider","Container","exact","path","ReactDOM","document","getElementById"],"mappings":"wNAIMA,G,cAAMC,IAASC,cAAc,CACjCC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAEJC,EAAOV,EAAIU,OACXC,EAAKX,EAAIY,Y,OCXhBC,EAAcC,IAAMC,gBAEnB,SAASC,IACd,OAAOC,qBAAWJ,GAGb,SAASK,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC7B,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiCAC,qBAAU,WAMR,OALoBf,EAAKgB,oBAAmB,SAACC,GAC3CL,EAAeK,GACfH,GAAW,QAIZ,IAGH,IAAMI,EAAQ,CACZP,cACAQ,MArCF,SAAeC,EAAOC,GACpB,OAAOrB,EAAKsB,2BAA2BF,EAAOC,IAqC9CE,OA3CF,SAAgBH,EAAOC,GACrB,OAAOrB,EAAKwB,+BAA+BJ,EAAOC,IA2ClDI,OAlCF,WACE,OAAOzB,EAAK0B,WAkCZC,cA9BF,SAAuBP,GACrB,OAAOpB,EAAK4B,uBAAuBR,IA8BnCS,YA1BF,SAAqBT,GACnB,OAAOT,EAAYkB,YAAYT,IA0B/BU,eAtBF,SAAwBT,GACtB,OAAOV,EAAYmB,eAAeT,KAwBpC,OACE,cAAClB,EAAY4B,SAAb,CAAsBb,MAAOA,EAA7B,UACIL,GAAWJ,I,0ECrDJ,SAASuB,IACtB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBACnBX,EAAWjB,IAAXiB,OACR,EAA0Bb,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAA8B5B,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMyB,EAAUC,cAPe,4CAU/B,WAA4BC,GAA5B,SAAAC,EAAA,yDACED,EAAEE,iBACER,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MAF/D,yCAIWoB,EAAS,0BAJpB,uBAOIA,EAAS,IACTxB,GAAW,GARf,SASUS,EAAOU,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OAT7D,OAUIqB,EAAQM,KAAK,KAVjB,kDAaIC,QAAQC,IAAI,KAAMC,MAbtB,KAcY,KAAMA,KAdlB,OAeW,8BAfX,QAoBW,uBApBX,gCAgBQV,EACE,kEAjBV,oCAqBQA,EAAS,2CArBjB,6BAwBQA,EAAS,+BAxBjB,QA2BExB,GAAW,GA3Bb,2DAV+B,sBAwC/B,OACE,gCACE,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,+BACCd,GAAS,cAACe,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBhB,IACnC,eAACiB,EAAA,EAAD,CAAMC,SA9CiB,4CA8CvB,UACE,qBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNC,aAAa,GACbC,SAAUhC,EACVkB,UAAU,6BAGd,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNC,aAAa,GACbE,KAAK,WACLD,SAAU9B,EACVgB,UAAU,6BAGd,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,mBACNC,aAAa,GACbE,KAAK,WACLD,SAAU7B,EACVe,UAAU,6BAGd,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACQ,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRC,SAAU1D,EACVqD,KAAK,SACLf,UAAU,yBANZ,+BAcR,sBAAKA,UAAU,sBAAf,qCAC2B,IACzB,cAAC,IAAD,CAAcqB,UAAWC,IAAMC,GAAG,SAAlC,0B,oYClGFC,GAAc,IACdC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,YAAa,CACXC,MAAO,KAETC,OAAQ,CACNC,OAAQJ,EAAMI,OAAOC,OAAS,EAC9BC,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAAYjB,GACZK,MAAM,eAAD,OAAiBL,GAAjB,OACLS,WAAYN,EAAMO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJvC,QAAS,QAEX0B,OAAQ,CACNH,MAAOL,GACPsB,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVnB,MAAOL,GACPS,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASI,kBAGzCO,YAAY,aACVhB,WAAYN,EAAMO,YAAYC,OAAO,QAAS,CAC5CC,OAAQT,EAAMO,YAAYE,OAAOC,MACjCC,SAAUX,EAAMO,YAAYI,SAASC,gBAEvCW,UAAW,SACXrB,MAAOF,EAAMwB,QAAQ,GAAK,GACzBxB,EAAMyB,YAAYC,GAAG,MAAQ,CAC5BxB,MAAOF,EAAMwB,QAAQ,GAAK,IAG9BG,QAAQ,aACNhD,QAAS,OACTE,WAAY,SACZD,eAAgB,WAChBgD,QAAS5B,EAAMwB,QAAQ,EAAG,IAEvBxB,EAAM6B,OAAOF,SAElBG,QAAS,CACPC,SAAU,EACVH,QAAS5B,EAAMwB,QAAQ,IAEzBQ,eAAgB,CACdC,MAAO,aA6KIC,gBAzKC,SAACC,GAAW,IAAD,IACjBxF,EAAWnB,IAAXmB,OADiB,4CAGzB,sBAAAiB,EAAA,+EAEUjB,IAFV,OAGIc,EAAQM,KAAK,UAHjB,wGAHyB,sBASzB,IAAQN,EAAY0E,EAAZ1E,QACF2E,EAAUtC,KACVE,EAAQF,KACd,EAAwBxE,IAAMM,UAAS,GAAvC,mBAAOyG,EAAP,KAAaC,EAAb,KACA,EAAsC1G,mBAAS,CAE7C2G,SAAS,IAFX,6BA+BA,IAAMC,EAAe,CACnB,CACEC,KAAM,aACNC,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAMlF,EAAQM,KAAK,OAE9B,CACE0E,KAAM,cACNC,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAMlF,EAAQM,KAAK,WAE9B,CACE0E,KAAM,UACNC,KAAM,cAAC,KAAD,IACNC,QAAS,kBAAMlF,EAAQM,KAAK,aAE9B,CACE0E,KAAM,0BACNC,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAMlF,EAAQM,KAAK,cAE9B,CACE0E,KAAM,aACNC,KAAM,cAAC,KAAD,MAGJE,EAAoB,CACxB,CACEH,KAAM,UACNC,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAMlF,EAAQM,KAAK,qBAE9B,CACE0E,KAAM,YACNC,KAAM,cAAC,IAAD,IACNC,QAAS,kBAAMlF,EAAQM,KAAK,cAE9B,CACE0E,KAAM,sBACNC,KAAM,cAAC,KAAD,IACNC,QApDJ,WACE,IAAIE,EAASC,aAAaC,QAAQ,SACnB,SAAXF,GACF7E,QAAQC,IAAI,KACZ6E,aAAaE,QAAQ,SAAS,IACV,UAAXH,IACT7E,QAAQC,IAAI,KACZ6E,aAAaE,QAAQ,SAAS,IAEhCC,OAAOC,SAASC,WA6ChB,CACEV,KAAM,UACNC,KAAM,cAAC,IAAD,IACNC,QAzFqB,6CA4FzB,OACE,sBAAKtE,UAAW+D,EAAQgB,KAAxB,UACE,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACEC,SAAS,QACTlF,UAAWmF,YAAKpB,EAAQjC,OAAT,eACZiC,EAAQvB,YAAcwB,IAH3B,SAME,eAACoB,GAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEpE,MAAM,UACN,aAAW,cACXqD,QAjFe,WACvBL,GAAQ,IAiFAqB,KAAK,QACLtF,UAAWmF,YAAKpB,EAAQpB,WAAT,eACZoB,EAAQlB,KAAOmB,IANpB,SASE,cAAC,IAAD,MAEF,cAACuB,EAAA,EAAD,CAAYpE,QAAQ,KAAKqE,QAAM,EAA/B,wCAKJ,eAACC,GAAA,EAAD,CACEtE,QAAQ,YACRnB,UAAWmF,YAAKpB,EAAQ/B,QAAT,mBACZ+B,EAAQf,WAAagB,GADT,cAEZD,EAAQd,aAAee,GAFX,IAIfD,QAAS,CACP2B,MAAOP,aAAI,mBACRpB,EAAQf,WAAagB,GADb,cAERD,EAAQd,aAAee,GAFf,KAPf,UAaE,qBAAKhE,UAAW+D,EAAQT,QAAxB,SACE,cAAC+B,EAAA,EAAD,CAAYf,QAxGM,WACxBL,GAAQ,IAuGF,SACuB,QAApBtC,EAAMgE,UACL,cAAC,KAAD,IAEA,cAAC,IAAD,QAIN,cAACC,GAAA,EAAD,UACGzB,EAAa0B,KAAI,SAACC,EAAMC,GACvB,IAAQ3B,EAAwB0B,EAAxB1B,KAAMC,EAAkByB,EAAlBzB,KAAMC,EAAYwB,EAAZxB,QACpB,OACE,eAAC0B,GAAA,EAAD,CAAUC,QAAM,EAAY3B,QAASA,EAArC,UACGD,GAAQ,cAAC6B,GAAA,EAAD,UAAe7B,IACxB,cAAC8B,GAAA,EAAD,CAAcC,QAAShC,MAFHA,QAO5B,cAACiC,EAAA,EAAD,IACA,cAACT,GAAA,EAAD,UACGrB,EAAkBsB,KAAI,SAACC,EAAMC,GAC5B,IAAQ3B,EAAwB0B,EAAxB1B,KAAMC,EAAkByB,EAAlBzB,KAAMC,EAAYwB,EAAZxB,QACpB,OACE,eAAC0B,GAAA,EAAD,CAAUC,QAAM,EAAY3B,QAASA,EAArC,UACGD,GAAQ,cAAC6B,GAAA,EAAD,UAAe7B,IACxB,cAAC8B,GAAA,EAAD,CAAcC,QAAShC,MAFHA,QAO5B,cAACiC,EAAA,EAAD,a,UClMOC,GAjEY,WACvB,OAAO,8BACH,cAAC,KAAD,CACIC,KAAM,CACFC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHC,SAAU,CACN,CACA7F,MAAO,sBACP2F,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9DG,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,GAEjB,CACIhG,MAAO,4BACP2F,KAAM,CAAC,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACzEG,gBAAiB,MACjBC,YAAa,SAIrBE,OAAQ,IACRhF,MAAO,IACPiF,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,MAAO,CACH,CACIC,MAAO,CACHC,aAAa,YC7C3BzF,YAAW,CAC3B0F,cAAe,CACbC,YAAa,OACbC,aAAc,UAIH,SAASC,KACtB,MAA0BhK,mBAAS,IAAnC,6BACgB8B,cACQlC,IAAhBK,YAER,OACE,qCACE,cAAC,GAAD,IACA,eAACgK,EAAA,EAAD,CAAMC,WAAS,EAACtE,QAAS,EAAzB,UACE,eAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAC4B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,UACE,cAAC9H,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,oBAAIC,UAAU,mBAAd,+BAGJ,cAACF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,oBAAIC,UAAU,mBAAd,4BAIN,cAACwH,EAAA,EAAD,CAAM1B,MAAI,EAAC4B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC9H,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC8H,GAAD,UAIN,cAACL,EAAA,EAAD,CAAM1B,MAAI,EAAC4B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC9H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACwF,EAAA,EAAD,CAAYlE,UAAU,KAAKyG,MAAM,SAAjC,8BAGA,cAACvC,EAAA,EAAD,CAAYpE,QAAQ,QAAQF,MAAM,gBAAgBI,UAAU,IAA5D,SACE,eAACkE,EAAA,EAAD,CAAYpE,QAAQ,QAAQF,MAAM,gBAAgBI,UAAU,IAA5D,0BACU,uBADV,gBAC2B,uBAD3B,gBAC4C,uBAD5C,eAC6D,IAC3D,uBAFF,gBAEmB,yCClDpB,SAAS0G,KACtB,IAAMjJ,EAAWC,mBACXC,EAAcD,mBACZf,EAAUb,IAAVa,MACR,EAA0BT,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAA8B5B,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMyB,EAAUC,cANc,4CAS9B,WAA4BC,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAGIL,EAAS,IACTxB,GAAW,GAJf,SAKUK,EAAMc,EAASW,QAAQ1B,MAAOiB,EAAYS,QAAQ1B,OAL5D,OAMIqB,EAAQM,KAAK,KANjB,gDASIC,QAAQC,IAAI,KAAMC,MATtB,KAUY,KAAMA,KAVlB,OAWW,wBAXX,QAcW,wBAdX,QAkBW,2BAlBX,QAuBW,uBAvBX,gCAYQV,EAAS,0DAZjB,oCAeQA,EAAS,kIAfjB,oCAmBQA,EAAS,6HAnBjB,oCAwBQA,EAAS,sCAxBjB,6BA2BQA,EAAS,qBA3BjB,QA8BExB,GAAW,GA9Bb,0DAT8B,sBA0C9B,OACE,qCACE,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,kBAAd,2BACCd,GACC,cAACe,EAAA,EAAD,CAAOkB,QAAQ,WAAWjB,SAAS,QAAnC,SACGhB,IAGL,oEACA,eAACiB,EAAA,EAAD,CAAMC,SArDgB,4CAqDtB,UACE,qBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdR,UAAU,yBANZ,SAQE,cAACS,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNC,aAAa,GACbC,SAAUhC,EACVkB,UAAU,6BAGd,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,WACNC,aAAa,GACbE,KAAK,WACLD,SAAU9B,EACVgB,UAAU,6BAGd,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACQ,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLH,KAAK,SACLI,QAAQ,YACRC,SAAU1D,EACVsC,UAAU,yBANZ,yBAYJ,cAACgB,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRC,SAAU1D,EACVqD,KAAK,SACLf,UAAU,yBACVqB,UAAWC,IACXC,GAAG,mBARL,kCAcJ,sBAAKvB,UAAU,sBAAf,mCACyB,IACvB,cAAC,IAAD,CAAcqB,UAAWC,IAAMC,GAAG,UAAlC,2B,wBCrHJyG,GAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7C7H,MAAO,WACP8H,SAAU,QAGG,SAASC,KAEtB,IAAMC,EAAiBtJ,mBACjBuJ,EAAkBvJ,mBAClBwJ,EAAoBxJ,mBAClBvB,EAAgBL,IAAhBK,YACR,EAA0BD,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAAoC5B,mBAAS,IAA7C,mBAAOiL,EAAP,KAAmBC,EAAnB,KACA,EAAwClL,mBAAS,IAAjD,mBAAOmL,EAAP,KAAqBC,EAArB,KACA,EAAsCpL,mBAAS,IAA/C,mBAAOqL,EAAP,KAAoBC,EAApB,KACA,EAA8BtL,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAV6B,4CAa7B,4BAAA4B,EAAA,yDAEQuJ,EAAsB,CAC1BC,WAAYV,EAAe5I,QAAQ1B,MACnCiL,iBAAkBV,EAAgB7I,QAAQ1B,MAC1CkL,mBAAoBV,EAAkB9I,QAAQ1B,OAGX,KAAjCsK,EAAe5I,QAAQ1B,MAR7B,uBASIoB,EAAS,iDATb,6BAawC,KAAlCmJ,EAAgB7I,QAAQ1B,MAb9B,uBAcIoB,EAAS,wDAdb,6BAkB0C,KAApCoJ,EAAkB9I,QAAQ1B,MAlBhC,wBAmBIoB,EAAS,0DAnBb,4CAuBmBrC,EAAGoM,WAAW,eAvBjC,UAwBUpM,EAAGoM,WAAW,eAAeC,IAAI3L,EAAY4L,KAAKC,IAAIP,EAAqB,CAAEQ,OAAO,IAxB9F,2DA0BI3J,QAAQC,IAAR,MA1BJ,QA4BEgF,OAAOC,SAASC,SA5BlB,4DAb6B,+BA4CdyE,IA5Cc,2EA4C7B,gCAAAhK,EAAA,sEACuBzC,EAAGoM,WAAW,eAAeC,IAAI3L,EAAY4L,KADpE,cACQI,EADR,gBAEoBA,EAAOC,MAF3B,OAEQN,EAFR,OAGQO,EAAUP,EAAI5C,OACf4C,EAAIQ,OAGPhK,QAAQC,IAAI,iBAAkB8J,EAAQX,YAFtCpJ,QAAQC,IAAI,qBAId6I,EAAciB,EAAQX,YACtBJ,EAAgBe,EAAQV,kBACxBH,EAAea,EAAQT,oBAXzB,6CA5C6B,sBAmE7B,OATArL,qBAAU,WAAM,4CAEd,sBAAA2B,EAAA,sDACEgK,IACA5L,GAAW,GAFb,4CAFc,sBACdA,GAAW,GADG,mCAMdiM,KACC,IAEClM,EACK,4CAIP,gCACE,cAAC,GAAD,IACA,eAAC8J,EAAA,EAAD,CAAMC,WAAS,EAACtE,QAAS,EAAzB,UACE,cAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAC+D,GAAI,GAAIlC,GAAI,GAAvB,SACE,cAAC7H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,wBACCd,GACC,cAACe,EAAA,EAAD,CAAOkB,QAAQ,WAAWjB,SAAS,QAAnC,SACGhB,IAGL,eAAC4K,GAAA,EAAD,CAAa3I,QAAQ,WAAWd,MAAO,CAAEC,QAAS,QAAlD,UACE,cAACyJ,GAAA,EAAD,CAASC,MAAM,oBAAf,SACE,cAACvJ,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,SACNE,SAAUuH,EACVxH,aAAa,GACbE,KAAK,SACLf,UAAU,kCAGd,cAAC+J,GAAA,EAAD,CAASC,MAAM,+BAAf,SACE,cAACvJ,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,gBACNE,SAAUwH,EACVzH,aAAa,GACbE,KAAK,SACLf,UAAU,kCAGd,cAAC+J,GAAA,EAAD,CAASC,MAAM,gDAAf,SACE,cAACvJ,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,kBACNE,SAAUyH,EACV1H,aAAa,GACbE,KAAK,SACLf,UAAU,kCAGd,cAACgB,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRJ,KAAK,SACLuD,QA3Ha,2CA4HbtE,UAAU,8BANZ,8BAcR,cAACwH,EAAA,EAAD,CAAM1B,MAAI,EAAC+D,GAAI,GAAIlC,GAAI,GAAvB,SACE,cAAC7H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,sCACA,eAAC8J,GAAA,EAAD,CAAa3I,QAAQ,WAAWd,MAAO,CAAEC,QAAS,QAAlD,UACE,cAACyJ,GAAA,EAAD,CAASC,MAAM,mCAAf,SACE,cAACvJ,EAAA,EAAD,CACEW,UAAQ,EACRR,MAAM,eACN7C,MAAOiK,GAAUiC,OAAOzB,GACxBxI,UAAU,kCAGd,cAAC+J,GAAA,EAAD,CAASC,MAAM,oCAAf,SACE,cAACvJ,EAAA,EAAD,CACEW,UAAQ,EACRR,MAAM,gBACN7C,MAAK,UAAK2K,EAAL,KACL1I,UAAU,kCAGd,cAAC+J,GAAA,EAAD,CAASC,MAAM,oCAAf,SACE,cAACvJ,EAAA,EAAD,CACEW,UAAQ,EACRR,MAAM,uBACN7C,MAAOiK,GAAUiC,OAAOrB,GACxB5I,UAAU,kD,0JChJ1BgI,GAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7C7H,MAAO,WACP8H,SAAU,QAGN+B,GAAU,CACd,CACEvJ,GAAI,KACJC,MAAO,KACPuJ,SAAU,EACVF,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,WAE1C,CACEzJ,GAAI,OACJC,MAAO,OACPyJ,SAAU,IACVJ,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,WAE1C,CACEzJ,GAAI,OACJC,MAAO,OACPyJ,SAAU,IACVJ,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,WAE1C,CACEzJ,GAAI,SACJC,MAAO,SACPyJ,SAAU,MAIC,SAASC,KAEtB,MAAwB/M,mBAAS,GAAjC,mBAAOgN,EAAP,KAAaC,EAAb,KACA,EAAsCjN,mBAAS,GAA/C,mBAAOkN,EAAP,KAAoBC,EAApB,KAUA,EAAwCzN,IAAMM,SAAS,IAAIoN,MAA3D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BtN,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACMkJ,EAAiBtJ,mBACvB,EAAoCxB,mBAAS,IAA7C,mBAAOuN,EAAP,KAAmBC,EAAnB,KACQvN,EAAgBL,IAAhBK,YACR,EAA8BD,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAlB+B,SA6BhBqN,IA7BgB,2EA6B/B,4BAAAzL,EAAA,+EAE2BzC,EACpBoM,WAAW,cACX+B,MAAM,SAAU,KAAMzN,EAAY4L,KAClCK,MALP,cAEUyB,EAFV,yBAMWA,EAASC,KAAKtF,KAAI,SAACsD,GAAD,OAASA,EAAI5C,WAN1C,yFA7B+B,+BAwChB6E,IAxCgB,2EAwC/B,gCAAA7L,EAAA,6DACM8L,EAAY,EACV7B,EAAS1M,EAAGoM,WAAW,cAF/B,SAGyBM,EAAOyB,MAAM,SAAU,KAAMzN,EAAY4L,KAAKK,MAHvE,YAGQyB,EAHR,QAIeI,MAJf,yCAKWD,GALX,cAOEH,EAASK,SAAQ,SAACpC,GAChB,IAAMqC,EAAarC,EAAI5C,OACnBiF,EAAWC,GAAKJ,IAClBA,EAAYG,EAAWC,IAEpBD,EAAWC,KACdJ,EAAYK,OAAO,OAbzB,kBAgBSL,GAhBT,4CAxC+B,kEA2D/B,gCAAA9L,EAAA,yDACuC,KAAjC8I,EAAe5I,QAAQ1B,MAD7B,uBAEIoB,EAAS,uDAFb,6BAKO2L,EALP,uBAMI3L,EAAS,oDANb,sCAScuM,OATd,SAS2BN,IAT3B,mDAS8CM,OAAO,GAA/CC,EATN,UAUMC,EAAOC,KAAOjB,GAAcX,OAAO,cAEjC6B,EAAkB,CACtBC,OAAQ/D,GAAUiC,OAAO5B,EAAe5I,QAAQ1B,OAChDiO,KAAMlB,EACNmB,OAAQzO,EAAY4L,IACpBuB,KAAMiB,EACNH,GAAIE,GAENxM,EAAS,IAnBX,UAoBoBrC,EAAGoM,WAAW,cAAcC,MAAME,IAAIyC,GApB1D,eAqBEf,EAAc,IACd1C,EAAe5I,QAAQ1B,MAAQ,GAC/B8M,EAAgB,IAAIF,MACpB/F,OAAOC,SAASC,SAxBlB,6CA3D+B,sBAsF/B,IAAI,EAAkBvH,mBAAS,IAA/B,mBAAKgJ,EAAL,KAAW2F,EAAX,KAcA,OAXAtO,qBAAU,WAAM,4CAEd,8BAAA2B,EAAA,sEACwByL,IADxB,OACQmB,EADR,OAEQC,EAASD,EAAQE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMb,GAAKc,EAAOd,MACjES,EAAQE,GACRzO,GAAW,GAJb,4CAFc,sBACdA,GAAW,GADG,mCAQdiM,KACC,IAEClM,EACK,4CAIP,gCACE,cAAC,GAAD,IACA,eAAC8J,EAAA,EAAD,CAAMC,WAAS,EAACtE,QAAS,EAAzB,UACE,cAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAC+D,GAAI,GAAIlC,GAAI,GAAvB,SACE,cAAC7H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,0BACCd,GACC,cAACe,EAAA,EAAD,CAAOkB,QAAQ,WAAWjB,SAAS,QAAnC,SACGhB,IAGL,eAAC4K,GAAA,EAAD,CAAa3I,QAAQ,WAAWd,MAAO,CAAEC,QAAS,QAAlD,UACE,cAACyJ,GAAA,EAAD,CAASC,MAAM,oBAAf,SACE,cAACvJ,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,SACNE,SAAUuH,EACVxH,aAAa,GACbE,KAAK,SACLf,UAAU,kCAGd,eAACwM,GAAA,EAAD,CACE9L,UAAQ,EACR+L,QAAQ,kCACR9L,GAAG,4BACHC,MAAM,OACNC,aAAa,4BACb9C,MAAO+M,EACP4B,SArHS,SAACC,GACxB5B,EAAc4B,EAAMC,OAAO7O,QAqHb8O,WAAW,EACX7M,UAAU,0BACV8M,WAAY,CAAE,aAAc,iBAV9B,UAYE,cAACC,GAAA,EAAD,CAAUhP,MAAM,GAAGqD,UAAQ,EAA3B,0BAGA,cAAC2L,GAAA,EAAD,CAAUhP,MAAO,KAAjB,gBACA,cAACgP,GAAA,EAAD,CAAUhP,MAAO,OAAjB,kBAhBF,qBAiBE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,eAAjB,0BACA,cAACgP,GAAA,EAAD,CAAUhP,MAAO,UAAjB,qBACA,cAACgP,GAAA,EAAD,CAAUhP,MAAO,QAAjB,sBAGF,8BACE,cAAC,KAAD,CAAyBiP,MAAOC,KAAhC,SACE,cAAC,KAAD,CACEC,OAAO,SACPvM,GAAG,qBACHC,MAAM,oBACNqJ,OAAO,aACPjK,UAAU,8BACVjC,MAAO6M,EACP8B,SAxIK,SAACd,GACxBf,EAAgBe,IAwIEuB,oBAAqB,CACnB,aAAc,qBAKtB,cAACnM,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRJ,KAAK,SACLf,UAAU,8BACVsE,QA7Ke,2CAuKjB,8BAcR,cAACkD,EAAA,EAAD,CAAM1B,MAAI,EAAC+D,GAAI,GAAIlC,GAAI,GAAvB,SACE,cAAC7H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,cAAd,2BACA,cAACoN,GAAA,EAAD,CAAgB/L,UAAWgM,KAA3B,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGtD,GAAQrE,KAAI,SAAC4H,GAAD,OACX,cAACC,GAAA,EAAD,CAEE5F,MAAO2F,EAAO3F,MACdzH,MAAO,CAAEgK,SAAUoD,EAAOpD,UAH5B,SAKGoD,EAAO7M,OAJH6M,EAAOhC,WASpB,cAACkC,GAAA,EAAD,UACGpH,EACEqH,MACCrD,EAAOE,EACPF,EAAOE,EAAcA,GAEtB5E,KAAI,SAACgI,GACJ,OACE,cAACL,GAAA,EAAD,CAAUM,OAAK,EAACC,UAAW,EAA3B,SACG7D,GAAQrE,KAAI,SAAC4H,GACZ,IAAM1P,EAAQ8P,EAAIJ,EAAO9M,IACzB,OACE,cAAC+M,GAAA,EAAD,CAA2B5F,MAAO2F,EAAO3F,MAAzC,SACG2F,EAAOxD,QAA2B,kBAAVlM,EACrB0P,EAAOxD,OAAOlM,GACdA,GAHU0P,EAAO9M,QAJMkN,EAAIpC,cAiBnD,cAACuC,GAAA,EAAD,CACEC,mBAAoB,CAAC,GACrB5M,UAAU,MACV6M,MAAO3H,EAAK4H,OACZ1D,YAAaA,EACbF,KAAMA,EACN6D,aAnOW,SAACzB,EAAO0B,GAC/B7D,EAAQ6D,IAmOIC,oBAhOkB,SAAC3B,GAC/BjC,GAAgBiC,EAAMC,OAAO7O,OAC7ByM,EAAQ,mB,+BCrEG,SAAS+D,GAAT,GAAwD,IAAtBC,EAAqB,EAAhCnN,UAAyBoN,EAAO,mBAE/DjR,EAAeL,IAAfK,YACH,OACI,cAAC,IAAD,2BAAWiR,GAAX,IACAC,OAAQ,SAAA5K,GACJ,OAAOtG,EAAc,cAACgR,EAAD,eAAe1K,IAAY,cAAC,IAAD,CAAUvC,GAAG,eCL1D,SAASoN,KACtB,IAAM7P,EAAWC,mBACTP,EAAkBrB,IAAlBqB,cACR,EAA0BjB,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAA+B5B,mBAAS,IAAxC,mBAAOqR,EAAP,KAAiBC,EAAjB,KACA,EAA8BtR,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KALuC,4CAQvC,WAA4B2B,GAA5B,SAAAC,EAAA,6DACED,EAAEE,iBADJ,SAGIqP,EAAW,IACX1P,EAAS,IACTxB,GAAW,GALf,SAMUa,EAAcM,EAASW,QAAQ1B,OANzC,OAOI8Q,EAAW,6CAPf,kDAUIlP,QAAQC,IAAI,KAAMC,MAVtB,KAWY,KAAMA,KAXlB,OAYW,wBAZX,gCAaQV,EAAS,6CAbjB,6BAgBQA,EAAS,4BAhBjB,QAmBExB,GAAW,GAnBb,2DARuC,sBA8BvC,OACE,mCACE,cAACmC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,mCACCd,GAAS,cAACe,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBhB,IAClC0P,GAAY,cAAC3O,EAAA,EAAD,CAAOC,SAAS,UAAhB,SAA2B0O,IAH1C,yLAOE,eAACzO,EAAA,EAAD,CAAMC,SAxCyB,4CAwC/B,UACE,qBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNC,aAAa,GACbC,SAAUhC,EACVkB,UAAU,6BAGd,cAACgB,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,QACLC,QAAQ,YACRC,SAAU1D,EACVqD,KAAK,SACLf,UAAU,yBANZ,+BAWF,cAACgB,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLH,KAAK,SACLI,QAAQ,YACRC,SAAU1D,EACVsC,UAAU,yBACVqB,UAAWC,IACXC,GAAG,SARL,0B,wBCvDJE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoD,KAAM,CACJrB,SAAU,OAIC,SAASoL,KACtB,IAAMhQ,EAAWC,mBACXC,EAAcD,mBACdE,EAAqBF,mBAC3B,EAAwC5B,IAAhCuB,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eACrB,EAA0BpB,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACA,EAA8B5B,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMyB,EAAUC,cAChB,EAAgClC,IAAxBK,EAAR,EAAQA,YAAR,EAAqBc,OAoDrB,IAAMyF,EAAUtC,KAChB,OACE,qCACE,cAAC,GAAD,IACA,qBAAKzB,UAAW+D,EAAQgB,KAAxB,SACE,eAACyC,EAAA,EAAD,CAAMC,WAAS,EAACtE,QAAS,EAAzB,UACE,cAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAC4B,GAAI,GAAf,SACE,eAAC5H,EAAA,EAAD,WACE,cAACiP,GAAA,EAAD,CACE/O,UAAU,mBACVgP,OAAQ,cAACC,GAAA,EAAD,CAAQ,aAAW,gBAC3BC,qBAAsB,CAAE/N,QAAS,MACjC6I,MAAM,wBAER,cAACjK,EAAA,EAAD,UACE,sBAAKC,UAAU,yBAAf,UACE,6CADF,IAC4BxC,EAAYS,gBAK9C,cAACuJ,EAAA,EAAD,CAAM1B,MAAI,EAAC4B,GAAI,GAAIC,GAAI,GAAvB,SACE,eAAC7H,EAAA,EAAD,CAAMO,MAAO,CAAEwB,MAAO,QAASgF,OAAQ,SAAvC,UACE,cAACkI,GAAA,EAAD,CAAY/E,MAAM,mBAClB,eAACjK,EAAA,EAAD,WACGb,GAAS,cAACe,EAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBhB,IACnC,eAACiB,EAAA,EAAD,CAAMC,SA1DpB,SAAsBd,GAIpB,GAHAA,EAAEE,iBATAV,EAASW,QAAQ1B,QAAUP,EAAYS,OACT,KAA9Be,EAAYS,QAAQ1B,OACiB,KAArCkB,EAAmBQ,QAAQ1B,OAC3BiB,EAAYS,QAAQ1B,QAAUkB,EAAmBQ,QAAQ1B,MASzC,OAAOoB,EAAS,yCAElC,IAAMgQ,EAAW,GACjBxR,GAAW,GACXwB,EAAS,IAGLL,EAASW,QAAQ1B,QAAUP,EAAYS,OACzCkR,EAASzP,KAAKhB,EAAYI,EAASW,QAAQ1B,QAIzCiB,EAAYS,QAAQ1B,OACtBoR,EAASzP,KAAKf,EAAeK,EAAYS,QAAQ1B,QAGnDqR,QAAQC,IAAIF,GACTG,MAAK,WACJlQ,EAAQM,KAAK,QAEd6P,OAAM,WACLpQ,EAAS,+BAEVqQ,SAAQ,WACP7R,GAAW,OA8BH,UACE,qBACE0C,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,QACNC,aAAa,GACbC,SAAUhC,EACVkB,UAAU,6BAId,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACuJ,GAAA,EAAD,CAASC,MAAM,0CAAf,SACE,cAACvJ,EAAA,EAAD,CACEE,GAAG,oBACHC,MAAM,WACNC,aAAa,GACbE,KAAK,WACLD,SAAU9B,EACVgB,UAAU,+BAKhB,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,cAACuJ,GAAA,EAAD,CAASC,MAAM,0CAAf,SACE,cAACvJ,EAAA,EAAD,CACEE,GAAG,oBACHC,MAAM,mBACNC,aAAa,GACbE,KAAK,WACLD,SAAU7B,EACVe,UAAU,+BAIhB,cAACgB,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRC,SAAU1D,EACVqD,KAAK,SACLf,UAAU,yBANZ,uC,8FCjJZyB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8N,YAAa,CACXvC,OAAQvL,EAAMwB,QAAQ,GACtBkH,SAAU,KAEZqF,YAAa,CACXC,UAAWhO,EAAMwB,QAAQ,QAId,SAASyM,KAEtB,IAiCIC,EAjCJ,EAAoCtS,oBAAS,GAA7C,mBAAOuS,EAAP,KAAmBC,EAAnB,KACA,EAAoCxS,oBAAS,GAA7C,mBAAOyS,EAAP,KAAmBC,EAAnB,KAMMC,EAAoB,WACxBD,GAAc,IAGVE,EAAgBpR,mBAiBhBqR,EAAoB,WACxBL,GAAc,IAGhB,EAAkBxS,oBAAS,GAApBG,EAAP,oBAEI2S,EAAmB,GACnBC,EAAa,GAMjBA,EAHEA,EAAaC,KAAKC,UAAU/L,cAkB9BoL,EAXEA,EAAiBU,KAAKE,MAAMhM,aAAaC,QAAQ,WAYnD2L,EANEA,EAAmB5L,aAAaC,QAAQ,YAQ1C,MAA0BnH,mBAAS,CAEjCmT,OAAQb,IAFV,mBAAOc,EAAP,KAAcC,EAAd,KAKA,EAAgCrT,mBAAS,IAAzC,mBAAO4K,EAAP,KAAiB0I,EAAjB,KAUM9M,EAAUtC,KA5EgB,4CA+EhC,sBAAAlC,EAAA,sDACO4I,GAIH1D,aAAaE,QAAQ,WAAYwD,GACjC1D,aAAaE,QAAQ,SAAUgM,EAAMD,UAJrCjM,aAAaE,QAAQ,WAAY0L,GACjC5L,aAAaE,QAAQ,SAAUgM,EAAMD,SAKvC9L,OAAOC,SAASC,SARlB,4CA/EgC,sBA0FhC,OACE,gCACE,cAAC,GAAD,IACA,cAAChF,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,qBACA,qBACEK,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,SAOE,eAACsJ,GAAA,EAAD,CAAa3I,QAAQ,WAAWnB,UAAW+D,EAAQ0L,YAAnD,UACE,eAACjD,GAAA,EAAD,CACE3L,aAAcsH,EAAS2I,gBACvBrE,QAAQ,kCACR9L,GAAG,4BACHC,MAAM,OACN7C,MAAOoK,EACPuE,SA1Ce,SAACC,GAE5BkE,EAAYlE,EAAMC,OAAO7O,QAyCb8O,WAAW,EACX7M,UAAW+D,EAAQ2L,YACnB5C,WAAY,CAAE,aAAc,iBAT9B,UAWE,eAACC,GAAA,EAAD,CAAUhP,MAAM,GAAGqD,UAAQ,EAA3B,sBACYiP,KAEZ,cAACtD,GAAA,EAAD,CAAUhP,MAAO,MAAjB,+BACA,cAACgP,GAAA,EAAD,CAAUhP,MAAO,MAAjB,iCACA,cAACgP,GAAA,EAAD,CAAUhP,MAAO,MAAjB,mCAEF,cAACgT,GAAA,EAAD,CAAgB/Q,UAAU,0BAA1B,+BAGA,cAACgR,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEC,QAASR,EAAMD,OACfhE,SAzDS,SAACC,GAE1BiE,EAAS,2BAAKD,GAAN,kBAAchE,EAAMC,OAAOwE,KAAOzE,EAAMC,OAAOuE,YAwDvCC,KAAK,WAGTxQ,MAAM,iDAIZ,cAACI,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLH,KAAK,SACLI,QAAQ,YACRmD,QA9IsB,2CA+ItBlD,SAAU1D,EACVsC,UAAU,yBAPZ,2BAWA,eAACqR,GAAA,EAAD,CACErN,KAAMgM,EACNsB,QAASpB,EACT,kBAAgB,oBAHlB,UAKE,cAACqB,GAAA,EAAD,CAAa5Q,GAAG,oBAAhB,oBACA,eAAC6Q,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,0FAIA,cAAChR,EAAA,EAAD,CACEC,UAAQ,EACRgR,WAAS,EACTxE,OAAO,QACPvM,GAAG,aACHG,SAAUqP,EACVvP,MAAM,gBACN+Q,WAAS,OAGb,eAACC,GAAA,EAAD,WACE,cAAC5Q,EAAA,EAAD,CAAQsD,QAAS4L,EAAmBjP,MAAM,UAA1C,oBAGA,cAACD,EAAA,EAAD,CAAQsD,QA9JU,WAC5B,IAAIiC,EAAOgK,KAAKE,MAAMN,EAAc1Q,QAAQ1B,OAC5C4B,QAAQC,IAAIuQ,EAAc1Q,QAAQ1B,OAClC8T,OAAOC,KAAKvL,GAAMgF,SAAQ,SAAUwG,GAClCtN,aAAaE,QAAQoN,EAAGxL,EAAKwL,OAE3B5B,EAAc1Q,QAAQ1B,OACxBkS,GAAc,GAEhBrL,OAAOC,SAASC,UAqJkC7D,MAAM,UAA9C,0BAKJ,eAAC+Q,GAAA,EAAD,CAAK1R,QAAQ,OAAOC,eAAe,gBAAnC,UACE,cAACS,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLoD,QAjLkB,WAC5B2L,GAAc,IAiLJlP,KAAK,SACLI,QAAQ,YACRC,SAAU1D,EACVsC,UAAU,YAPZ,6BAYA,eAACqR,GAAA,EAAD,CACErN,KAAM8L,EACNwB,QAASlB,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,cAACmB,GAAA,EAAD,CAAa5Q,GAAG,qBAAhB,SAEI,qFAGJ,cAAC6Q,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmB9Q,GAAG,2BAAtB,SACG2P,MAGL,cAACsB,GAAA,EAAD,UACE,cAAC5Q,EAAA,EAAD,CAAQsD,QAAS8L,EAAmBnP,MAAM,UAAUyQ,WAAS,EAA7D,uBAMJ,cAAC1Q,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLoD,QA9LkB,WAC5ByL,GAAc,IA8LJhP,KAAK,SACLI,QAAQ,YACRC,SAAU1D,EACVsC,UAAU,OAPZ,wCCpNM0B,aAAW,SAACC,GAAD,MAAY,CACvC8N,YAAa,CACXvC,OAAQvL,EAAMwB,QAAQ,GACtBkH,SAAU,KAEZqF,YAAa,CACXC,UAAWhO,EAAMwB,QAAQ,IAE3B4B,KAAM,CACJrB,SAAU,GAEZgC,MAAO,CACLnC,QAAS5B,EAAMwB,QAAQ,GACvB8O,UAAW,SACXhR,MAAOU,EAAMuQ,QAAQ9N,KAAK+N,eAd9B,IAkBInK,GAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7C7H,MAAO,WACP8H,SAAU,QAGN+B,GAAU,CACd,CACEvJ,GAAI,KACJC,MAAO,KACPuJ,SAAU,EACVF,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,WAE1C,CACEzJ,GAAI,OACJC,MAAO,OACPyJ,SAAU,IACVJ,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,WAE1C,CACEzJ,GAAI,OACJC,MAAO,OACPyJ,SAAU,IACVJ,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,WAE1C,CACEzJ,GAAI,SACJC,MAAO,SACPyJ,SAAU,KAEZ,CACE1J,GAAI,OACJC,MAAO,OACPyJ,SAAU,IACVJ,OAAQ,SAAClM,GAAD,OAAWA,EAAMqM,eAAe,YAI7B,SAASgI,KACtB,MAAwCnV,IAAMM,SAAS,IAAIoN,MAA3D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BtN,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KACQ3B,EAAgBL,IAAhBK,YACF6K,EAAiBtJ,mBACjBsT,EAAetT,mBACrB,EAAkCxB,mBAAS,IAA3C,mBAAO+U,EAAP,KAAkBC,EAAlB,KACA,EAA8BhV,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAGA,EAAwBJ,mBAAS,GAAjC,mBAAOgN,EAAP,KAAaC,EAAb,KACA,EAAsCjN,mBAAS,GAA/C,mBAAOkN,EAAP,KAAoBC,EAApB,KAXgC,SAgCjBU,IAhCiB,2EAgChC,gCAAA7L,EAAA,6DACM8L,EAAY,EACV7B,EAAS1M,EAAGoM,WAAW,mBAF/B,SAGyBM,EAAOyB,MAAM,SAAU,KAAMzN,EAAY4L,KAAKK,MAHvE,YAGQyB,EAHR,QAIeI,MAJf,yCAKWD,GALX,cAOEH,EAASK,SAAQ,SAACpC,GAChB,IAAMqC,EAAarC,EAAI5C,OACnBiF,EAAWC,GAAKJ,IAClBA,EAAYG,EAAWC,IAEpBD,EAAWC,KACdJ,EAAYK,OAAO,OAbzB,kBAgBSL,GAhBT,4CAhCgC,kEAmDhC,gCAAA9L,EAAA,yDACuC,KAAjC8I,EAAe5I,QAAQ1B,MAD7B,uBAEIoB,EAAS,uDAFb,6BAKOmT,EALP,uBAMInT,EAAS,oDANb,sCAScuM,OATd,SAS2BN,IAT3B,mDAS8CM,OAAO,GAA/CC,EATN,UAUMC,EAAOC,KAAOjB,GAAcX,OAAO,cAEjC6B,EAAkB,CACtBC,OAAQ/D,GAAUiC,OAAO5B,EAAe5I,QAAQ1B,OAChDiO,KAAMsG,EACNrG,OAAQzO,EAAY4L,IACpBoJ,KAAMH,EAAa5S,QAAQ1B,MAC3B4M,KAAMiB,EACNH,GAAIE,GAENxM,EAAS,IApBX,UAqBoBrC,EACfoM,WAAW,mBACXC,MACAE,IAAIyC,GAxBT,eAyBEyG,EAAa,IACblK,EAAe5I,QAAQ1B,MAAQ,GAC/BsU,EAAa5S,QAAQ1B,MAAQ,GAC7B8M,EAAgB,IAAIF,MACpB/F,OAAOC,SAASC,SA7BlB,6CAnDgC,+BAoFjB2N,IApFiB,2EAoFhC,4BAAAlT,EAAA,+EAE2BzC,EACpBoM,WAAW,mBACX+B,MAAM,SAAU,KAAMzN,EAAY4L,KAClCK,MALP,cAEUyB,EAFV,yBAMWA,EAASC,KAAKtF,KAAI,SAACsD,GAAD,OAASA,EAAI5C,WAN1C,yFApFgC,sBA8FhC,IAAI,EAAkBhJ,mBAAS,IAA/B,mBAAKgJ,EAAL,KAAW2F,EAAX,KAcA,OAXAtO,qBAAU,WAAM,4CAEd,8BAAA2B,EAAA,sEACwBkT,IADxB,OACQtG,EADR,OAEQC,EAASD,EAAQE,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMb,GAAKc,EAAOd,MACjES,EAAQE,GACRzO,GAAW,GAJb,4CAFc,sBACdA,GAAW,GADG,mCAQdiM,KACC,IAEClM,EACK,4CAMP,sBACEsC,UAAU,4BACVK,MAAO,CAAEqS,UAAW,QAASrI,SAAU,KAFzC,UAIE,cAAC,GAAD,IACA,eAAC7C,EAAA,EAAD,CAAMC,WAAS,EAACtE,QAAS,EAAzB,UACE,cAACqE,EAAA,EAAD,CAAM1B,MAAI,EAAC+D,GAAI,GAAIlC,GAAI,GAAvB,SACE,cAAC7H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,mBAAd,uCACCd,GACC,cAACe,EAAA,EAAD,CAAOkB,QAAQ,WAAWjB,SAAS,QAAnC,SACGhB,IAGL,eAAC4K,GAAA,EAAD,CAAa3I,QAAQ,WAAWd,MAAO,CAAEC,QAAS,QAAlD,UACE,cAACyJ,GAAA,EAAD,CAASC,MAAM,yBAAf,SACE,cAACvJ,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,oBACHC,MAAM,SACNE,SAAUuH,EACVxH,aAAa,GACbE,KAAK,SACLf,UAAU,kCAGd,8BACE,cAAC,KAAD,CAAyBgN,MAAOC,KAAhC,SACE,cAAC,KAAD,CACEC,OAAO,SACPvM,GAAG,qBACHC,MAAM,oBACNqJ,OAAO,aACPjK,UAAU,8BACVjC,MAAO6M,EACP8B,SA5HK,SAACd,GACxBf,EAAgBe,IA4HEuB,oBAAqB,CACnB,aAAc,qBAMtB,eAACX,GAAA,EAAD,CACE9L,UAAQ,EACR+L,QAAQ,kCACR9L,GAAG,4BACHC,MAAM,OACNC,aAAa,4BACb9C,MAAOuU,EACP5F,SAhJS,SAACC,GACxB4F,EAAa5F,EAAMC,OAAO7O,QAgJZ8O,WAAW,EACX7M,UAAU,0BACV8M,WAAY,CAAE,aAAc,iBAV9B,UAYE,cAACC,GAAA,EAAD,CAAUhP,MAAM,GAAGqD,UAAQ,EAA3B,+BAGA,cAAC2L,GAAA,EAAD,CAAUhP,MAAO,UAAjB,qDAGA,cAACgP,GAAA,EAAD,CAAUhP,MAAO,YAAjB,uBAlBF,qBAoBE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,mBAAjB,8BAEY,IAtBd,8BAwBE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,UAAjB,qBAxBF,mCA0BE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,OAAjB,wBA1BF,2BA4BE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,gBAAjB,2BA5BF,iCA8BE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,UAAjB,qBA9BF,sBAgCE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,gBAAjB,2BAhCF,uCAkCE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,gBAAjB,oCAEY,IApCd,qCAsCE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,MAAjB,uBAtCF,wBAwCE,cAACgP,GAAA,EAAD,CAAUhP,MAAO,OAAjB,kBAxCF,qCA4CA,cAACgT,GAAA,EAAD,CAAgB/Q,UAAU,0BAA1B,+CAIA,cAACS,EAAA,EAAD,CACEkS,YAAY,4BACZC,WAAS,EACTC,KAAM,EACN1R,QAAQ,WACRL,SAAUuR,EACVrS,UAAU,8BACV8S,QAAS,IAGX,cAAC9R,EAAA,EAAD,CACEC,MAAM,UACNC,KAAK,QACLC,QAAQ,YACRJ,KAAK,SACLuD,QA9NgB,2CA+NhBtE,UAAU,8BANZ,mCAcR,cAACwH,EAAA,EAAD,CAAM1B,MAAI,EAAC+D,GAAI,GAAIlC,GAAI,GAAvB,SACE,cAAC7H,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,oBAAIC,UAAU,cAAd,gCACA,cAACoN,GAAA,EAAD,CAAgB/L,UAAWgM,KAA3B,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGtD,GAAQrE,KAAI,SAAC4H,GAAD,OACX,cAACC,GAAA,EAAD,CAEE5F,MAAO2F,EAAO3F,MACdzH,MAAO,CAAEgK,SAAUoD,EAAOpD,UAH5B,SAKGoD,EAAO7M,OAJH6M,EAAOhC,WASpB,cAACkC,GAAA,EAAD,UACGpH,EACEqH,MACCrD,EAAOE,EACPF,EAAOE,EAAcA,GAEtB5E,KAAI,SAACgI,GACJ,OACE,cAACL,GAAA,EAAD,CAAUM,OAAK,EAACC,UAAW,EAA3B,SACG7D,GAAQrE,KAAI,SAAC4H,GACZ,IAAM1P,EAAQ8P,EAAIJ,EAAO9M,IACzB,OACE,cAAC+M,GAAA,EAAD,CAA2B5F,MAAO2F,EAAO3F,MAAzC,SACG2F,EAAOxD,QAA2B,kBAAVlM,EACrB0P,EAAOxD,OAAOlM,GACdA,GAHU0P,EAAO9M,QAJMkN,EAAIpC,cAiBnD,cAACuC,GAAA,EAAD,CACEC,mBAAoB,CAAC,GACrB5M,UAAU,MACV6M,MAAO3H,EAAK4H,OACZ1D,YAAaA,EACbF,KAAMA,EACN6D,aA7QW,SAACzB,EAAO0B,GAC/B7D,EAAQ6D,IA6QIC,oBA1QkB,SAAC3B,GAC/BjC,GAAgBiC,EAAMC,OAAO7O,OAC7ByM,EAAQ,mB,yCCxBGuI,OA9Df,WAEE,MAAgCxV,oBAAS,GAAzC,mBAAOyV,EAAP,KAAiBC,EAAjB,KACArV,qBAAU,WACR,IAAMsV,EAAazO,aAAaC,QAAQ,SACxC/E,QAAQC,IAAIsT,GACZD,EAAY1C,KAAKE,MAAMyC,IACvBvT,QAAQC,IAAIoT,KACX,IAEH,IAAMrR,EAAQwR,aAAe,CAC3BjB,QAAS,CACPnR,KAAMiS,EAAW,OAAS,WAI9B,OACE,cAACI,GAAA,EAAD,CAAezR,MAAOA,EAAtB,SACE,cAAC0L,GAAA,EAAD,UACE,eAACgG,EAAA,EAAD,CACErT,UAAU,mDACVK,MAAO,CAAEqS,UAAW,SAFtB,UAIE,qBAAK1S,UAAU,eAAf,SACE,cAACgB,EAAA,EAAD,CACEG,QAAQ,WACRF,MAAM,YACNqD,QAAS,kBAAM2O,GAAaD,IAH9B,qBAQF,qBAAKhT,UAAW+D,WAAQ0D,UAAxB,SACE,qBAAKzH,UAAU,QAAQK,MAAO,CAAE8J,SAAU,IAAKE,SAAU,KAAzD,SACE,cAAC,IAAD,UACE,cAAChN,EAAD,UACE,eAAC,IAAD,WACE,cAACkR,GAAD,CAAc+E,OAAK,EAACC,KAAK,IAAIlS,UAAWkG,KACxC,cAACgH,GAAD,CACE+E,OAAK,EACLC,KAAK,kBACLlS,UAAWyN,KAEb,cAACP,GAAD,CAAc+E,OAAK,EAACC,KAAK,QAAQlS,UAAW+G,KAC5C,cAACmG,GAAD,CAAc+E,OAAK,EAACC,KAAK,UAAUlS,UAAWiJ,KAC9C,cAACiE,GAAD,CAAc+E,OAAK,EAACC,KAAK,WAAWlS,UAAWuO,KAC/C,cAAC,IAAD,CAAO2D,KAAK,SAASlS,UAAW0G,KAChC,cAAC,IAAD,CAAOwL,KAAK,UAAUlS,UAAWxC,IACjC,cAAC,IAAD,CAAO0U,KAAK,mBAAmBlS,UAAWsN,KAC1C,qBAAK3O,UAAU,SAAf,SACE,cAACuO,GAAD,CAAc+E,OAAK,EAACC,KAAK,WAAWlS,UAAW+Q,0B,OClErEoB,IAAS9E,OAAO,cAAC,GAAD,IAAS+E,SAASC,eAAe,W","file":"static/js/main.0f243ac8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB0JpyQEEsiXCROOIiNjOR_3_IVsdJrz4A\",\r\n  authDomain: \"debtapp-2f389.firebaseapp.com\",\r\n  projectId: \"debtapp-2f389\",\r\n  storageBucket: \"debtapp-2f389.appspot.com\",\r\n  messagingSenderId: \"483293932886\",\r\n  appId: \"1:483293932886:web:fa6db6d15f81e8d8d33af7\",\r\n  measurementId: \"G-L1KMYHC1JH\",\r\n});\r\nexport const auth = app.auth();\r\nexport const db = app.firestore();\r\nexport default app;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  //Sign up function\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  //Login Function\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  //Logout function\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  //Reset password function\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  //Update email function\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  //Update password function\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n  //Helper function\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  //Export value to use in other files\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Link as MaterialLink,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { signup } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  //Function for the sign up button\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      //Check to see if both password are the same\r\n      return setError(\"Password do not match\");\r\n    }\r\n    try {\r\n      setError(\"\"); //Default to no error first\r\n      setLoading(true); //Prevent the users from spam clicking the sign up button\r\n      await signup(emailRef.current.value, passwordRef.current.value); //Wait to see if signup successful\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      //if fail then print the message\r\n      console.log(error.code);\r\n      switch (error.code) {\r\n        case \"auth/email-already-in-use\":\r\n          setError(\r\n            \"Sorry, the email address is already in use by another account.\"\r\n          );\r\n          break;\r\n        case \"auth/weak-password\":\r\n          setError(\"Sorry, please enter a stronger password\");\r\n          break;\r\n        default:\r\n          setError(\"Failed to create an account\");\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardContent>\r\n          <h2 className=\"text-center mb-4\">Create an account</h2>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Email\"\r\n                defaultValue=\"\"\r\n                inputRef={emailRef}\r\n                className=\"w-100 text-center mt-3\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Password\"\r\n                defaultValue=\"\"\r\n                type=\"password\"\r\n                inputRef={passwordRef}\r\n                className=\"w-100 text-center mt-3\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Confirm Password\"\r\n                defaultValue=\"\"\r\n                type=\"password\"\r\n                inputRef={passwordConfirmRef}\r\n                className=\"w-100 text-center mt-3\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n                type=\"submit\"\r\n                className=\"w-100 text-center mt-2\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"w-100 text-end mt-2\">\r\n        Already have an account?{\" \"}\r\n        <MaterialLink component={Link} to=\"/login\">\r\n          Log In\r\n        </MaterialLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport PieChartIcon from \"@material-ui/icons/PieChart\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  //FormControlLabel,\r\n  //Switch,\r\n  makeStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  CssBaseline,\r\n} from \"@material-ui/core\";\r\n//import { WindowScroller } from \"react-virtualized\";\r\n\r\nconst drawerWidth = 270;\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerPaper: {\r\n    width: 500,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  titleItemRight: {\r\n    float: \"right\",\r\n  },\r\n}));\r\n\r\nconst Sidebar = (props) => {\r\n  const { logout } = useAuth();\r\n  //Handle logout\r\n  async function handleLogout() {\r\n    try {\r\n      await logout();\r\n      history.push(\"/login\");\r\n    } catch {}\r\n  }\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const theme = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [toggleState, setToggleState] = useState({\r\n    //Toggle handler\r\n    toggler: true,\r\n  });\r\n\r\n  const handleToggleChange = (event) => {\r\n    setToggleState({\r\n      ...toggleState,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function darkMode() {\r\n    var aValue = localStorage.getItem(\"theme\");\r\n    if (aValue === \"true\") {\r\n      console.log(\"1\");\r\n      localStorage.setItem(\"theme\", false);\r\n    } else if (aValue === \"false\") {\r\n      console.log(\"2\");\r\n      localStorage.setItem(\"theme\", true);\r\n    }\r\n    window.location.reload();\r\n  }\r\n\r\n  const itemListMain = [\r\n    {\r\n      text: \"Dashboard \",\r\n      icon: <DashboardIcon />,\r\n      onClick: () => history.push(\"/\"),\r\n    },\r\n    {\r\n      text: \"Debt Input \",\r\n      icon: <AssignmentIcon />,\r\n      onClick: () => history.push(\"/Debt\"),\r\n    },\r\n    {\r\n      text: \"Income \",\r\n      icon: <AccountBalanceWalletIcon />,\r\n      onClick: () => history.push(\"/income\"),\r\n    },\r\n    {\r\n      text: \"Transactions & Expenses\",\r\n      icon: <MonetizationOnIcon />,\r\n      onClick: () => history.push(\"/expense\"),\r\n    },\r\n    {\r\n      text: \"Analytics \",\r\n      icon: <PieChartIcon />,\r\n    },\r\n  ];\r\n  const itemListSecondary = [\r\n    {\r\n      text: \"Account\",\r\n      icon: <AccountBoxIcon />,\r\n      onClick: () => history.push(\"/update-account\"),\r\n    },\r\n    {\r\n      text: \"Settings \",\r\n      icon: <SettingsIcon />,\r\n      onClick: () => history.push(\"/setting\"),\r\n    },\r\n    {\r\n      text: \"Dark | Light Toggle\",\r\n      icon: <Brightness4Icon />,\r\n      onClick: darkMode,\r\n    },\r\n    {\r\n      text: \"Logout \",\r\n      icon: <ExitToAppIcon />,\r\n      onClick: handleLogout,\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Debt Relief Dashboard\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <List>\r\n          {itemListMain.map((item, index) => {\r\n            const { text, icon, onClick } = item;\r\n            return (\r\n              <ListItem button key={text} onClick={onClick}>\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {itemListSecondary.map((item, index) => {\r\n            const { text, icon, onClick } = item;\r\n            return (\r\n              <ListItem button key={text} onClick={onClick}>\r\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import React from 'react'\r\nimport { Bar, Chart } from 'react-chartjs-2'\r\n\r\n// Enable or Disable tooltips Chart.defaults.plugins.tooltip = false\r\n\r\nconst DashboardChartType = () => {\r\n    return <div>\r\n        <Bar\r\n            data={{\r\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n                datasets: [\r\n                    {\r\n                    label: 'Monthly Debt Payoff',\r\n                    data: [350, 400, 450, 300, 350, 450, 500, 340, 300, 550, 650, 360],\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)',\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)'\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)',\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)'\r\n                    ],\r\n                    borderWidth: 1\r\n                },\r\n                {\r\n                    label: 'Monthly Total Debt Amount',\r\n                    data: [5000, 4650, 4250, 3800, 3500, 3150, 2700, 2200, 1860, 1560, 1010, 360],\r\n                    backgroundColor: 'red',\r\n                    borderColor: 'red'\r\n                }\r\n            ],\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n                maintainAspectRatio: false,\r\n                scales: {\r\n                    yAxis: [\r\n                        {\r\n                            ticks: {\r\n                                beginAtZero: true\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default DashboardChartType","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n//import Alert from \"@material-ui/lab/Alert\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport DashboardChartType from \"./DashboardChart\";\r\n\r\nconst useStyles = makeStyles({\r\n  gridContainer: {\r\n    paddingLeft: \"40px\",\r\n    paddingRight: \"40px\",\r\n  },\r\n});\r\n\r\nexport default function Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={24} sm={12} md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center mb-2\">Brief Summary</h2>\r\n            </CardContent>\r\n          </Card>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center mb-2\">Details</h2>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={24} sm={12} md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <DashboardChartType />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={24} sm={12} md={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography component=\"h2\" align=\"center\">\r\n                Debt Relief Tips\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  • Tip 1 <br></br>• Tip 2 <br></br>• Tip 3 <br></br>• Tip 4{\" \"}\r\n                  <br></br>• Tip 5 <br></br>\r\n                </Typography>\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport {\r\n  Button, TextField, Link as MaterialLink, Card, CardContent,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  //Function for the submit button\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\"); //Default to no error first\r\n      setLoading(true); //Prevent the users from spam clicking the login button\r\n      await login(emailRef.current.value, passwordRef.current.value); //Wait to see if login successful\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      //if fail then print the messages\r\n      console.log(error.code);\r\n      switch (error.code) {\r\n        case \"auth/user-not-found\":\r\n          setError(\"Sorry, we couldn't find an account with that username.\");\r\n          break;\r\n        case \"auth/wrong-password\":\r\n          setError(`Sorry, that password isn't right. We can help you \r\n          recover your password using the \"FORGOT PASSWORD\" button below.`);\r\n          break;\r\n        case \"auth/too-many-requests\":\r\n          setError(\r\n            `Sorry, you have tried to login incorrectly too many times. Please reset your password using the \"FORGOT PASSWORD\" button.`\r\n          );\r\n          break;\r\n        case \"auth/invalid-email\":\r\n          setError(`Sorry, Please enter a valid email.`);\r\n          break;\r\n        default:\r\n          setError(\"Failed to Log In!\");\r\n      }\r\n    }\r\n    setLoading(false); //Done loading\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          <h2 className=\"text-start mb-4\">Welcome Back!</h2>\r\n          {error && (\r\n            <Alert variant=\"outlined\" severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <h6>We're so excited to see you again.</h6>\r\n          <Form onSubmit={handleSubmit}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n              className=\"w-100 text-center mt-3\"\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Email\"\r\n                defaultValue=\"\"\r\n                inputRef={emailRef}\r\n                className=\"w-100 text-center mt-2\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Password\"\r\n                defaultValue=\"\"\r\n                type=\"password\"\r\n                inputRef={passwordRef}\r\n                className=\"w-100 text-center mt-2\"\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                disabled={loading}\r\n                className=\"w-100 text-center mt-2\"\r\n              >\r\n                Log In\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n          <Button\r\n            color=\"default\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            disabled={loading}\r\n            type=\"submit\"\r\n            className=\"w-100 text-center mt-2\"\r\n            component={Link}\r\n            to=\"/forgot-password\"\r\n          >\r\n            Forgot Password\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"w-100 text-end mt-2\">\r\n        Don't have an account?{\" \"}\r\n        <MaterialLink component={Link} to=\"/signup\">\r\n          Sign Up\r\n        </MaterialLink>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { db } from \"../firebase\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Tooltip,\r\n  FormControl,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nvar formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n});\r\n\r\nexport default function Debt() {\r\n  //Input field handler\r\n  const amountInputRef = useRef(); //Input field for amount\r\n  const interestRateRef = useRef(); //Input field for interest rate\r\n  const monthlyPaymentRef = useRef(); //Input field for monthly payment\r\n  const { currentUser } = useAuth(); //Get the UUID of current login users\r\n  const [error, setError] = useState(\"\"); //For alerting errors to users\r\n  const [debtAmount, setDebtAmount] = useState(\"\"); //Debt Amount value/set\r\n  const [debtInterest, setDebtInterest] = useState(\"\"); //Debt Interest value/set\r\n  const [debtPayment, setDebtPayment] = useState(\"\"); //Debt Interest value/set\r\n  const [loading, setLoading] = useState(false); //Set loading state\r\n\r\n  //Add debt button handler\r\n  async function addDebtButton() {\r\n    //User debt data structure\r\n    const UserDebtFinanceData = {\r\n      DebtAmount: amountInputRef.current.value,\r\n      DebtInterestRate: interestRateRef.current.value,\r\n      DebtMonthlyPayment: monthlyPaymentRef.current.value,\r\n    };\r\n\r\n    if (amountInputRef.current.value === \"\") {\r\n      setError(\"Sorry, please enter the amount for this debt!\");\r\n      return;\r\n    }\r\n\r\n    if (interestRateRef.current.value === \"\") {\r\n      setError(\"Sorry, please enter the interest rate for this debt!\");\r\n      return;\r\n    }\r\n\r\n    if (monthlyPaymentRef.current.value === \"\") {\r\n      setError(\"Sorry, please enter the monthly payment for this debt!\");\r\n      return;\r\n    }\r\n    try {\r\n      const docRef = db.collection(\"UserFinance\");\r\n      await db.collection(\"UserFinance\").doc(currentUser.uid).set(UserDebtFinanceData, { merge: true });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    window.location.reload();\r\n  }\r\n\r\n  async function getUserFinanceData() {\r\n    const docRef = await db.collection(\"UserFinance\").doc(currentUser.uid);\r\n    const doc = await docRef.get();\r\n    const docData = doc.data();\r\n    if (!doc.exists) {\r\n      console.log(\"No such document!\");\r\n    } else {\r\n      console.log(\"Document data:\", docData.DebtAmount);\r\n    }\r\n    setDebtAmount(docData.DebtAmount);\r\n    setDebtInterest(docData.DebtInterestRate);\r\n    setDebtPayment(docData.DebtMonthlyPayment);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchTransaction() {\r\n      getUserFinanceData();\r\n      setLoading(false);\r\n    }\r\n    fetchTransaction();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <Grid container spacing={3}>\r\n        <Grid item sx={24} sm={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center mb-4\">Debt Input</h2>\r\n              {error && (\r\n                <Alert variant=\"outlined\" severity=\"error\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              <FormControl variant=\"outlined\" style={{ display: \"flex\" }}>\r\n                <Tooltip title=\"Enter debt amount\">\r\n                  <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Amount\"\r\n                    inputRef={amountInputRef}\r\n                    defaultValue=\"\"\r\n                    type=\"number\"\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <Tooltip title=\"Enter the debt interest rate\">\r\n                  <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Interest Rate\"\r\n                    inputRef={interestRateRef}\r\n                    defaultValue=\"\"\r\n                    type=\"number\"\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <Tooltip title=\"Enter the minimum or current monthly payment \">\r\n                  <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Monthly Payment\"\r\n                    inputRef={monthlyPaymentRef}\r\n                    defaultValue=\"\"\r\n                    type=\"number\"\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  onClick={addDebtButton}\r\n                  className=\"w-100 text-center mt-2 mb-2\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </FormControl>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item sx={24} sm={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center mb-4\">Current Debt Information</h2>\r\n              <FormControl variant=\"outlined\" style={{ display: \"flex\" }}>\r\n                <Tooltip title=\"This is the current debt balance\">\r\n                  <TextField\r\n                    disabled\r\n                    label=\"Debt Balance\"\r\n                    value={formatter.format(debtAmount)}\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <Tooltip title=\"This is the current debt interest\">\r\n                  <TextField\r\n                    disabled\r\n                    label=\"Debt Interest\"\r\n                    value={`${debtInterest}%`}\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <Tooltip title=\"This is the current debt interest\">\r\n                  <TextField\r\n                    disabled\r\n                    label=\"Debt Monthly Payment\"\r\n                    value={formatter.format(debtPayment)}\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n              </FormControl>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { db } from \"../firebase\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Tooltip,\r\n  FormControl,\r\n  Card,\r\n  MenuItem,\r\n  Select,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  Table,\r\n  TablePagination,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  makeStyles,\r\n  FormHelperText,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nvar formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n});\r\n\r\nconst columns = [\r\n  {\r\n    id: \"ID\",\r\n    label: \"ID\",\r\n    maxWidth: 5,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"Type\",\r\n    label: \"Type\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"Date\",\r\n    label: \"Date\",\r\n    minWidth: 120,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"Amount\",\r\n    label: \"Amount\",\r\n    minWidth: 100,\r\n  },\r\n];\r\n\r\nexport default function Income() {\r\n  //Table\r\n  const [page, setPage] = useState(0); //Table Page handle\r\n  const [rowsPerPage, setRowsPerPage] = useState(5); //Table page properties\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  //Handle change row per page in table\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date()); //Set and get the date from the date picker\r\n  const [error, setError] = useState(\"\"); //For alerting errors to users\r\n  const amountInputRef = useRef();\r\n  const [incomeType, setIncomeType] = useState(\"\"); //For Transaction Type\r\n  const { currentUser } = useAuth(); //Get the UUID of current login users\r\n  const [loading, setLoading] = useState(false); //Set loading state\r\n  const handleChangeType = (event) => {\r\n    setIncomeType(event.target.value);\r\n  };\r\n\r\n  //Date picker componenet\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  //#GetData\r\n  async function getIncomeData() {\r\n    try {\r\n      const snapshot = await db\r\n        .collection(\"UserIncome\")\r\n        .where(\"UserID\", \"==\", currentUser.uid)\r\n        .get();\r\n      return snapshot.docs.map((doc) => doc.data());\r\n    } catch (e) {}\r\n  }\r\n\r\n  //Generate ID for transaction\r\n  async function generateNewID() {\r\n    var highestID = 0;\r\n    const docRef = db.collection(\"UserIncome\");\r\n    const snapshot = await docRef.where(\"UserID\", \"==\", currentUser.uid).get(); //Only get transaction for the current user UID\r\n    if (snapshot.empty) {\r\n      return highestID;\r\n    }\r\n    snapshot.forEach((doc) => {\r\n      const dataResult = doc.data();\r\n      if (dataResult.ID > highestID) {\r\n        highestID = dataResult.ID;\r\n      }\r\n      if (!dataResult.ID) {\r\n        highestID = Number(0);\r\n      }\r\n    });\r\n    return highestID;\r\n  }\r\n\r\n  async function addIncomeButton() {\r\n    if (amountInputRef.current.value === \"\") {\r\n      setError(\"Sorry, please enter the amount for this transaction\");\r\n      return;\r\n    }\r\n    if (!incomeType) {\r\n      setError(\"Sorry, please pick the type for this transaction\");\r\n      return;\r\n    }\r\n    var newID = Number(await generateNewID()) + Number(1);\r\n    var date = moment(selectedDate).format(\"YYYY-MM-DD\");\r\n\r\n    const transactionData = {\r\n      Amount: formatter.format(amountInputRef.current.value),\r\n      Type: incomeType,\r\n      UserID: currentUser.uid,\r\n      Date: date,\r\n      ID: newID,\r\n    };\r\n    setError(\"\");\r\n    const res = await db.collection(\"UserIncome\").doc().set(transactionData);\r\n    setIncomeType(\"\");\r\n    amountInputRef.current.value = \"\";\r\n    setSelectedDate(new Date());\r\n    window.location.reload();\r\n  }\r\n\r\n  var [data, setData] = useState([]);\r\n\r\n  //Sort and fetch income\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchTransaction() {\r\n      const preSort = await getIncomeData();\r\n      const sorted = preSort.sort((first, second) => first.ID - second.ID);\r\n      setData(sorted);\r\n      setLoading(false);\r\n    }\r\n    fetchTransaction();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <Grid container spacing={3}>\r\n        <Grid item sx={24} sm={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center mb-4\">Income Input</h2>\r\n              {error && (\r\n                <Alert variant=\"outlined\" severity=\"error\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              <FormControl variant=\"outlined\" style={{ display: \"flex\" }}>\r\n                <Tooltip title=\"Enter debt amount\">\r\n                  <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Amount\"\r\n                    inputRef={amountInputRef}\r\n                    defaultValue=\"\"\r\n                    type=\"number\"\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <Select\r\n                  required\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  label=\"test\"\r\n                  defaultValue=\"Set the transaction type:\"\r\n                  value={incomeType}\r\n                  onChange={handleChangeType}\r\n                  autoWidth={true}\r\n                  className=\"w-100 text-justify mt-1\"\r\n                  inputProps={{ \"aria-label\": \"Without label\" }}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    Income Type:\r\n                  </MenuItem>\r\n                  <MenuItem value={\"W2\"}>W2</MenuItem>\r\n                  <MenuItem value={\"1099\"}>1099</MenuItem> Groceries expense\r\n                  <MenuItem value={\"Asset Income\"}>Asset Income</MenuItem>\r\n                  <MenuItem value={\"Alimony\"}>Alimony</MenuItem>\r\n                  <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                </Select>\r\n\r\n                <div>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Transaction Date:\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      className=\"w-100 text-center mt-2 mb-3\"\r\n                      value={selectedDate}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </div>\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className=\"w-100 text-center mt-2 mb-2\"\r\n                  onClick={addIncomeButton}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </FormControl>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item sx={24} sm={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center\">Recent Income</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {columns.map((column) => (\r\n                        <TableCell\r\n                          key={column.ID}\r\n                          align={column.align}\r\n                          style={{ minWidth: column.minWidth }}\r\n                        >\r\n                          {column.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row) => {\r\n                        return (\r\n                          <TableRow hover tabIndex={-1} key={row.ID}>\r\n                            {columns.map((column) => {\r\n                              const value = row[column.id];\r\n                              return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                  {column.format && typeof value === \"number\"\r\n                                    ? column.format(value)\r\n                                    : value}\r\n                                </TableCell>\r\n                              );\r\n                            })}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5]}\r\n                component=\"div\"\r\n                count={data.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\n\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n\r\nconst {currentUser} = useAuth()\r\n    return (\r\n        <Route {...rest}\r\n        render={props => {\r\n            return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}></Route>\r\n    )\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, TextField, Card, CardContent } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function ForgotPassword() {\r\n  const emailRef = useRef();\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [messsage, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //Function for the submit button\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setMessage(\"\");\r\n      setError(\"\"); //Default to no error first\r\n      setLoading(true); //Prevent the users from spam clicking the submit button\r\n      await resetPassword(emailRef.current.value); //Wait to see if reset function work\r\n      setMessage(\"Check your inbox for further instructions\"); //Notify the users to check their email\r\n    } catch (error) {\r\n      //if fail then print the message\r\n      console.log(error.code);\r\n      switch (error.code) {\r\n        case \"auth/user-not-found\":\r\n          setError(\"Sorry, no user was found with that email.\");\r\n          break;\r\n        default:\r\n          setError(\"Failed to reset password\");\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardContent>\r\n          <h2 className=\"text-center mb-4\">Forgot your password?</h2>\r\n          {error && <Alert severity=\"error\">{error}</Alert>}\r\n          {messsage && <Alert severity=\"success\">{messsage}</Alert>}\r\n          Please enter the email address for your account. A verification link\r\n          will be sent to you. Once you have received the link. You will be able\r\n          to choose a new password for your account.\r\n          <Form onSubmit={handleSubmit}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Email\"\r\n                defaultValue=\"\"\r\n                inputRef={emailRef}\r\n                className=\"w-100 text-center mt-3\"\r\n              />\r\n            </div>\r\n            <Button\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              disabled={loading}\r\n              type=\"submit\"\r\n              className=\"w-100 text-center mt-2\"\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </Form>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            disabled={loading}\r\n            className=\"w-100 text-center mt-2\"\r\n            component={Link}\r\n            to=\"/login\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {\r\n  Grid,\r\n  CardHeader,\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  Tooltip,\r\n  Link as MaterialLink,\r\n  Card,\r\n  makeStyles,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function UpdateAccount() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { updateEmail, updatePassword } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { currentUser, logout } = useAuth();\r\n\r\n  async function handleLogout() {\r\n    try {\r\n      await logout();\r\n      history.push(\"/login\");\r\n    } catch {}\r\n  }\r\n\r\n  // check if fields are correctly filled out\r\n  function fieldCheck() {\r\n    return (\r\n      emailRef.current.value !== currentUser.email ||\r\n      passwordRef.current.value === \"\" ||\r\n      passwordConfirmRef.current.value === \"\" ||\r\n      passwordRef.current.value !== passwordConfirmRef.current.value\r\n    );\r\n  }\r\n\r\n  //Function for the sign up button\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // function call. If true, return setError message.\r\n    if (fieldCheck()) return setError(\"Please correctly fill out all fields.\");\r\n\r\n    const promises = [];\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    //Check if enter email is different than current email\r\n    if (emailRef.current.value !== currentUser.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n\r\n    //Check if a new password is entered\r\n    if (passwordRef.current.value) {\r\n      promises.push(updatePassword(passwordRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        setError(\"Failed to update account\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Sidebar />\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader\r\n                className=\"text-center mb-4\"\r\n                avatar={<Avatar aria-label=\"profile-pic\"></Avatar>}\r\n                titleTypographyProps={{ variant: \"h5\" }}\r\n                title=\"Account Information\"\r\n              />\r\n              <CardContent>\r\n                <div className=\"w-100 text-center mb-4\">\r\n                  <strong>Email: </strong> {currentUser.email}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={24} sm={24}>\r\n            <Card style={{ width: \"280px\", height: \"375px\" }}>\r\n              <CardHeader title=\"Update Account\" />\r\n              <CardContent>\r\n                {error && <Alert severity=\"error\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <TextField\r\n                      required\r\n                      id=\"standard-required\"\r\n                      label=\"Email\"\r\n                      defaultValue=\"\"\r\n                      inputRef={emailRef}\r\n                      className=\"w-100 text-center mt-2\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Tooltip title=\"Leave blank if you don't want to change\">\r\n                      <TextField\r\n                        id=\"standard-required\"\r\n                        label=\"Password\"\r\n                        defaultValue=\"\"\r\n                        type=\"password\"\r\n                        inputRef={passwordRef}\r\n                        className=\"w-100 text-center mt-2\"\r\n                      />\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Tooltip title=\"Leave blank if you don't want to change\">\r\n                      <TextField\r\n                        id=\"standard-required\"\r\n                        label=\"Confirm Password\"\r\n                        defaultValue=\"\"\r\n                        type=\"password\"\r\n                        inputRef={passwordConfirmRef}\r\n                        className=\"w-100 text-center mt-2\"\r\n                      />\r\n                    </Tooltip>\r\n                  </div>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    disabled={loading}\r\n                    type=\"submit\"\r\n                    className=\"w-100 text-center mt-4\"\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </Form>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport {\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n  FormControlLabel,\r\n  Card,\r\n  Switch,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  TextField,\r\n  Box,\r\n  FormHelperText,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Setting() {\r\n  //For import/export prompt\r\n  const [openExport, setOpenExport] = useState(false);\r\n  const [openImport, setOpenImport] = useState(false);\r\n\r\n  const handleClickOpenImport = () => {\r\n    setOpenImport(true);\r\n  };\r\n\r\n  const handleCloseImport = () => {\r\n    setOpenImport(false);\r\n  };\r\n\r\n  const importTextRef = useRef();\r\n\r\n  const handleCloseImportSave = () => {\r\n    var data = JSON.parse(importTextRef.current.value);\r\n    console.log(importTextRef.current.value);\r\n    Object.keys(data).forEach(function (k) {\r\n      localStorage.setItem(k, data[k]);\r\n    });\r\n    if (importTextRef.current.value) {\r\n      setOpenImport(false);\r\n    }\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleClickOpenExport = () => {\r\n    setOpenExport(true);\r\n  };\r\n  const handleCloseExport = () => {\r\n    setOpenExport(false);\r\n  };\r\n\r\n  const [loading] = useState(false); //For button\r\n  var savedNotifyVal;\r\n  var savedCurrencyVal = \"\";\r\n  var exportJson = \"\";\r\n\r\n  function exportLocal() {\r\n    exportJson = JSON.stringify(localStorage);\r\n    return exportJson;\r\n  }\r\n  exportJson = exportLocal();\r\n\r\n  //Function to get saved notify setting\r\n  function getNotifyLocal() {\r\n    savedNotifyVal = JSON.parse(localStorage.getItem(\"notify\"));\r\n    return savedNotifyVal;\r\n  }\r\n\r\n  //Function to get saved currency setting\r\n  function getCurrencyLocal() {\r\n    savedCurrencyVal = localStorage.getItem(\"currency\");\r\n    return savedCurrencyVal;\r\n  }\r\n\r\n  //Get setting from localStorage\r\n  savedNotifyVal = getNotifyLocal();\r\n  savedCurrencyVal = getCurrencyLocal();\r\n\r\n  const [state, setState] = useState({\r\n    //For check box\r\n    notify: savedNotifyVal,\r\n  });\r\n\r\n  const [currency, setCurrency] = useState(\"\"); //For currency\r\n\r\n  const handleChangeCurrency = (event) => {\r\n    //For changes\r\n    setCurrency(event.target.value);\r\n  };\r\n  const handleChangeNotify = (event) => {\r\n    //For changes\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n  const classes = useStyles();\r\n\r\n  //Handle save setting button\r\n  async function saveButton() {\r\n    if (!currency) {\r\n      localStorage.setItem(\"currency\", savedCurrencyVal);\r\n      localStorage.setItem(\"notify\", state.notify);\r\n    } else {\r\n      localStorage.setItem(\"currency\", currency);\r\n      localStorage.setItem(\"notify\", state.notify);\r\n    }\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <Card>\r\n        <CardContent>\r\n          <h2 className=\"text-center mb-4\">Setting</h2>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <Select\r\n                defaultValue={currency.currentCurrency}\r\n                labelId=\"demo-simple-select-filled-label\"\r\n                id=\"demo-simple-select-filled\"\r\n                label=\"test\"\r\n                value={currency}\r\n                onChange={handleChangeCurrency}\r\n                autoWidth={true}\r\n                className={classes.selectEmpty}\r\n                inputProps={{ \"aria-label\": \"Without label\" }}\r\n              >\r\n                <MenuItem value=\"\" disabled>\r\n                  Current: {savedCurrencyVal}\r\n                </MenuItem>\r\n                <MenuItem value={\"USD\"}>U.S. Dollar (USD)</MenuItem>\r\n                <MenuItem value={\"EUR\"}>European Euro (EUR)</MenuItem>\r\n                <MenuItem value={\"JPY\"}>Japanese Yen (JPY)</MenuItem>\r\n              </Select>\r\n              <FormHelperText className=\"w-100 text-justify mt-2\">\r\n                Set your currency\r\n              </FormHelperText>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={state.notify}\r\n                    onChange={handleChangeNotify}\r\n                    name=\"notify\"\r\n                  />\r\n                }\r\n                label=\"Receive communication from Debt Relief.\"\r\n              />\r\n            </FormControl>\r\n          </div>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            onClick={saveButton}\r\n            disabled={loading}\r\n            className=\"w-100 text-center mt-2\"\r\n          >\r\n            Save Settings\r\n          </Button>\r\n          <Dialog\r\n            open={openImport}\r\n            onClose={handleCloseImport}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Import</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                To import your settings, please paste the content from the\r\n                export function.\r\n              </DialogContentText>\r\n              <TextField\r\n                required\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"importText\"\r\n                inputRef={importTextRef}\r\n                label=\"Paste it here\"\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseImport} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={handleCloseImportSave} color=\"primary\">\r\n                Import\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleClickOpenImport}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={loading}\r\n              className=\"mt-2 mr-3\"\r\n            >\r\n              Import Settings\r\n            </Button>\r\n\r\n            <Dialog\r\n              open={openExport}\r\n              onClose={handleCloseExport}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\r\n                  \"Copy the text below and paste it in the import prompt to transfer your settings!\"\r\n                }\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  {exportJson}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleCloseExport} color=\"primary\" autoFocus>\r\n                  Okay\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              onClick={handleClickOpenExport}\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={loading}\r\n              className=\"mt-2\"\r\n            >\r\n              Export Settings\r\n            </Button>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  Card,\r\n  TablePagination,\r\n  TextField,\r\n  Grid,\r\n  TableCell,\r\n  TableRow,\r\n  Paper,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  makeStyles,\r\n  FormHelperText,\r\n  CardContent,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { db } from \"../firebase\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n//import { StayCurrentLandscape } from \"@material-ui/icons\"; unused\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nvar formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n});\r\n\r\nconst columns = [\r\n  {\r\n    id: \"ID\",\r\n    label: \"ID\",\r\n    maxWidth: 5,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"Type\",\r\n    label: \"Type\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"Date\",\r\n    label: \"Date\",\r\n    minWidth: 120,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"Amount\",\r\n    label: \"Amount\",\r\n    minWidth: 100,\r\n  },\r\n  {\r\n    id: \"Note\",\r\n    label: \"Note\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n];\r\n\r\nexport default function Expense() {\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date()); //Set and get the date from the date picker\r\n  const [error, setError] = useState(\"\"); //For alerting errors to users\r\n  const { currentUser } = useAuth(); //Get the UUID of current login users\r\n  const amountInputRef = useRef();\r\n  const noteInputRef = useRef();\r\n  const [transType, setTransType] = useState(\"\"); //For Transaction Type\r\n  const [loading, setLoading] = useState(false); //Set loading state\r\n\r\n  //Table\r\n  const [page, setPage] = useState(0); //Table Page handle\r\n  const [rowsPerPage, setRowsPerPage] = useState(5); //Table page properties\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  //Handle change row per page in table\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  //Handle the changing value for types\r\n  const handleChangeType = (event) => {\r\n    setTransType(event.target.value);\r\n  };\r\n\r\n  //Date picker componenet\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  //Generate ID for transaction\r\n  async function generateNewID() {\r\n    var highestID = 0;\r\n    const docRef = db.collection(\"UserTransaction\");\r\n    const snapshot = await docRef.where(\"UserID\", \"==\", currentUser.uid).get(); //Only get transaction for the current user UID\r\n    if (snapshot.empty) {\r\n      return highestID;\r\n    }\r\n    snapshot.forEach((doc) => {\r\n      const dataResult = doc.data();\r\n      if (dataResult.ID > highestID) {\r\n        highestID = dataResult.ID;\r\n      }\r\n      if (!dataResult.ID) {\r\n        highestID = Number(0);\r\n      }\r\n    });\r\n    return highestID;\r\n  }\r\n\r\n  async function addExpenseButton() {\r\n    if (amountInputRef.current.value === \"\") {\r\n      setError(\"Sorry, please enter the amount for this transaction\");\r\n      return;\r\n    }\r\n    if (!transType) {\r\n      setError(\"Sorry, please pick the type for this transaction\");\r\n      return;\r\n    }\r\n    var newID = Number(await generateNewID()) + Number(1);\r\n    var date = moment(selectedDate).format(\"YYYY-MM-DD\");\r\n\r\n    const transactionData = {\r\n      Amount: formatter.format(amountInputRef.current.value),\r\n      Type: transType,\r\n      UserID: currentUser.uid,\r\n      Note: noteInputRef.current.value,\r\n      Date: date,\r\n      ID: newID,\r\n    };\r\n    setError(\"\");\r\n    const res = await db\r\n      .collection(\"UserTransaction\")\r\n      .doc()\r\n      .set(transactionData);\r\n    setTransType(\"\");\r\n    amountInputRef.current.value = \"\";\r\n    noteInputRef.current.value = \"\";\r\n    setSelectedDate(new Date());\r\n    window.location.reload();\r\n  }\r\n\r\n  //#GetData\r\n  async function getTransactionData() {\r\n    try {\r\n      const snapshot = await db\r\n        .collection(\"UserTransaction\")\r\n        .where(\"UserID\", \"==\", currentUser.uid)\r\n        .get();\r\n      return snapshot.docs.map((doc) => doc.data());\r\n    } catch (e) {}\r\n  }\r\n\r\n  var [data, setData] = useState([]);\r\n\r\n  //Sort and fetch transaction\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchTransaction() {\r\n      const preSort = await getTransactionData();\r\n      const sorted = preSort.sort((first, second) => first.ID - second.ID);\r\n      setData(sorted);\r\n      setLoading(false);\r\n    }\r\n    fetchTransaction();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  //#endregion\r\n\r\n  //Table\r\n  return (\r\n    <div\r\n      className=\"d-flex align-items-center\"\r\n      style={{ minHeight: \"125vh\", minWidth: 800 }}\r\n    >\r\n      <Sidebar />\r\n      <Grid container spacing={3}>\r\n        <Grid item sx={24} sm={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center mb-4\"> Expenses And Transaction</h2>\r\n              {error && (\r\n                <Alert variant=\"outlined\" severity=\"error\">\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n              <FormControl variant=\"outlined\" style={{ display: \"flex\" }}>\r\n                <Tooltip title=\"Enter Expense Amount: \">\r\n                  <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"Amount\"\r\n                    inputRef={amountInputRef}\r\n                    defaultValue=\"\"\r\n                    type=\"number\"\r\n                    className=\"w-100 text-center mt-2 mb-3\"\r\n                  />\r\n                </Tooltip>\r\n                <div>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Transaction Date:\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      className=\"w-100 text-center mt-2 mb-3\"\r\n                      value={selectedDate}\r\n                      onChange={handleDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </MuiPickersUtilsProvider>\r\n                </div>\r\n\r\n                <Select\r\n                  required\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  label=\"test\"\r\n                  defaultValue=\"Set the transaction type:\"\r\n                  value={transType}\r\n                  onChange={handleChangeType}\r\n                  autoWidth={true}\r\n                  className=\"w-100 text-justify mt-1\"\r\n                  inputProps={{ \"aria-label\": \"Without label\" }}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    Transaction Type:\r\n                  </MenuItem>\r\n                  <MenuItem value={\"Vehicle\"}>\r\n                    Vehicle (Payment/Insurance/Maintenance)\r\n                  </MenuItem>\r\n                  <MenuItem value={\"Groceries\"}>Groceries</MenuItem> Groceries\r\n                  expense\r\n                  <MenuItem value={\"Home_improvement\"}>\r\n                    Home Improvement\r\n                  </MenuItem>{\" \"}\r\n                  // home Improvement expense\r\n                  <MenuItem value={\"Utility\"}>Utility</MenuItem> // utility\r\n                  expense ex: internet\r\n                  <MenuItem value={\"Fuel\"}>Petrol/Gas</MenuItem> // fuel payment\r\n                  expense\r\n                  <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem> //\r\n                  mics entertainment expense\r\n                  <MenuItem value={\"Medical\"}>Medical</MenuItem> // medical\r\n                  expense\r\n                  <MenuItem value={\"Mortgage_Rent\"}>Mortgage/Rent</MenuItem> //\r\n                  monthly mortgage payment expense\r\n                  <MenuItem value={\"Phone_Payment\"}>\r\n                    Cellular/Phone Payment\r\n                  </MenuItem>{\" \"}\r\n                  // mobile Cellular Payment expense\r\n                  <MenuItem value={\"Edu\"}>Education</MenuItem> // education\r\n                  expense\r\n                  <MenuItem value={\"Misc\"}>Misc</MenuItem> // Mics expense /\r\n                  transactions\r\n                </Select>\r\n\r\n                <FormHelperText className=\"w-100 text-justify mt-2\">\r\n                  ***Choose the transaction type***\r\n                </FormHelperText>\r\n\r\n                <TextField\r\n                  placeholder=\"Add Note for Transaction.\"\r\n                  multiline\r\n                  rows={2}\r\n                  variant=\"outlined\"\r\n                  inputRef={noteInputRef}\r\n                  className=\"w-100 text-center mt-2 mb-2\"\r\n                  rowsMax={4}\r\n                />\r\n\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  onClick={addExpenseButton}\r\n                  className=\"w-100 text-center mt-2 mb-2\"\r\n                >\r\n                  Add Expense\r\n                </Button>\r\n              </FormControl>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item sx={24} sm={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <h2 className=\"text-center\">Recent transaction</h2>\r\n              <TableContainer component={Paper}>\r\n                <Table>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {columns.map((column) => (\r\n                        <TableCell\r\n                          key={column.ID}\r\n                          align={column.align}\r\n                          style={{ minWidth: column.minWidth }}\r\n                        >\r\n                          {column.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((row) => {\r\n                        return (\r\n                          <TableRow hover tabIndex={-1} key={row.ID}>\r\n                            {columns.map((column) => {\r\n                              const value = row[column.id];\r\n                              return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                  {column.format && typeof value === \"number\"\r\n                                    ? column.format(value)\r\n                                    : value}\r\n                                </TableCell>\r\n                              );\r\n                            })}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5]}\r\n                component=\"div\"\r\n                count={data.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Signup from \"./Signup\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AuthProvider } from \"../contexts/AuthContext\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Login from \"./Login\";\r\nimport Debt from \"./Debt\";\r\nimport Income from \"./Income\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport UpdateAccount from \"./UpdateAccount\";\r\nimport Setting from \"./Setting\";\r\nimport Expense from \"./Expense\";\r\nimport \"./App.css\";\r\nimport { classes } from \"istanbul-lib-coverage\";\r\n// for dark/light theme\r\nimport { Button, Paper } from \"@material-ui/core\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  // dark/light theme\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  useEffect(() => {\r\n    const localTheme = localStorage.getItem(\"theme\");\r\n    console.log(localTheme);\r\n    setDarkMode(JSON.parse(localTheme));\r\n    console.log(darkMode);\r\n  }, []);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: darkMode ? \"dark\" : \"light\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper>\r\n        <Container\r\n          className=\"d-flex align-items-center justify-content-center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <div className=\"theme-button\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setDarkMode(!darkMode)}\r\n            >\r\n              Theme\r\n            </Button>\r\n          </div>\r\n          <div className={classes.container}>\r\n            <div className=\"w-100\" style={{ maxWidth: 500, minWidth: 400 }}>\r\n              <Router>\r\n                <AuthProvider>\r\n                  <Switch>\r\n                    <PrivateRoute exact path=\"/\" component={Dashboard} />\r\n                    <PrivateRoute\r\n                      exact\r\n                      path=\"/update-account\"\r\n                      component={UpdateAccount}\r\n                    />\r\n                    <PrivateRoute exact path=\"/debt\" component={Debt} />\r\n                    <PrivateRoute exact path=\"/income\" component={Income} />\r\n                    <PrivateRoute exact path=\"/setting\" component={Setting} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/signup\" component={Signup} />\r\n                    <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n                    <div className=\"center\">\r\n                      <PrivateRoute exact path=\"/expense\" component={Expense} />\r\n                    </div>\r\n                  </Switch>\r\n                </AuthProvider>\r\n              </Router>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}